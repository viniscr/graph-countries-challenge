[{"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/index.tsx":"1","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/App.tsx":"2","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/routes.tsx":"3","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/client.ts":"4","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/graphql/cache.ts":"5","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/graphql/reactivities/countriesVariable.ts":"6","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/graphql/queries.ts":"7","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/components/Card/Card.tsx":"8","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/pages/CountriesList/CountriesList.tsx":"9","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/pages/CountryDetail/CountryDetail.tsx":"10","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/pages/CountryEdit/CountryEdit.tsx":"11","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/components/Input/Input.tsx":"12","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/components/Form/Form.tsx":"13","/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/components/Header/Header.tsx":"14"},{"size":289,"mtime":1607435751925,"results":"15","hashOfConfig":"16"},{"size":452,"mtime":1607435751630,"results":"17","hashOfConfig":"16"},{"size":802,"mtime":1607435752140,"results":"18","hashOfConfig":"16"},{"size":208,"mtime":1607435751659,"results":"19","hashOfConfig":"16"},{"size":773,"mtime":1607435751852,"results":"20","hashOfConfig":"16"},{"size":143,"mtime":1607435751905,"results":"21","hashOfConfig":"16"},{"size":377,"mtime":1607435751891,"results":"22","hashOfConfig":"16"},{"size":746,"mtime":1607448739650,"results":"23","hashOfConfig":"16"},{"size":1320,"mtime":1607486804664,"results":"24","hashOfConfig":"16"},{"size":2772,"mtime":1607475611264,"results":"25","hashOfConfig":"16"},{"size":1491,"mtime":1607478213870,"results":"26","hashOfConfig":"16"},{"size":404,"mtime":1607455365027,"results":"27","hashOfConfig":"16"},{"size":3150,"mtime":1607453443153,"results":"28","hashOfConfig":"16"},{"size":1057,"mtime":1607485884469,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1asyvt2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/index.tsx",[],["61","62"],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/App.tsx",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/routes.tsx",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/client.ts",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/graphql/cache.ts",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/graphql/reactivities/countriesVariable.ts",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/graphql/queries.ts",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/components/Card/Card.tsx",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/pages/CountriesList/CountriesList.tsx",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/pages/CountryDetail/CountryDetail.tsx",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/pages/CountryEdit/CountryEdit.tsx",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/components/Input/Input.tsx",[],["63","64"],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/components/Form/Form.tsx",[],"/Users/viniciusbarbosa/Projects/softplan-challenge/graph-countries-challenge/src/components/Header/Header.tsx",["65"],"import React, { FormEvent, useState } from 'react';\nimport { FaSearch } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\ninterface HeaderProps {\n  handleSearch?: Function;\n  hasSearch: boolean;\n}\n\nconst Header: React.FC<HeaderProps> = ({ handleSearch, hasSearch }) => {\n  const [term, setTerm] = useState('');\n\n  function handleSubmit(event: FormEvent) {\n    event.preventDefault();\n    if (handleSearch) {\n      handleSearch(term);\n    }\n  }\n\n  return (\n    <header className=\"header\" data-testid=\"header\">\n      <h1 className=\"header__title\" data-testid=\"header-title\">Country Finder</h1>\n      {hasSearch && (\n        <form action=\"#\" className=\"search\" onSubmit={handleSubmit} data-testid=\"header-search\">\n          <input\n            type=\"text\"\n            className=\"search__input\"\n            placeholder=\"Search Country\"\n            value={term}\n            onChange={(e) => setTerm(e.target.value)}\n          />\n          <FaSearch className=\"search__icon\" />\n        </form>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],["76"],["77"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]